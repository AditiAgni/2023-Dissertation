#Librarires
library("affy")
library("affyio")
library("limma")
library("Biostrings")
library("BiocManager")
library("GO.db")
library("impute")
library("preprocessCore")
library("dynamicTreeCut")
library("doParallel")
library("survival")
library("KEGGREST")
library("ggplot2")
library("matrixStats")
library("splines")
library("Hmisc")
library("foreach")
library("dplyr")
library("dbplyr")
library("hgu133a.db")
library("meta")
library("limma")
library("ggfortify")
library("stringi")
library("rio")
library("biomaRt")
library("Biobase")
library("tibble")
library("tidyverse")
library("RColorBrewer")
library("ggrepel")
library("heatmap3")
library("tidyverse")
library("sva")
library("MetaVolcanoR")
library("metafor")
library("readxl")
#Dataset 13351

#set wd- session-choose directory-"C:/Users/agnih/OneDrive/Desktop/dissertation/wd/GSE13351"

#cel files download and unpacking
gse13351<-list.celfiles("GSE13351/", pattern="CEL")

#reading raw data
RD_gse13351<-ReadAffy(verbose = TRUE, filenames = gse13351)

#visualization of raw data before normalization
hist(RD_gse13351)
ma.plot(rowMeans(log2(RAWEXP)), log2(RAWEXP[,1])-log2(RAWEXP[,2]), cex=1)
boxplot(RD_gse13351)

#phenodata import and read
file.exists("GSE13351p_tdata.txt")
PD_gse13351<-read.table("GSE13351p_tdata.txt", header = TRUE, sep = "\t")

#RMA normalization
ND_gse13351 = rma(RD_gse13351)

#viewing normalized data= View(ND_gse13351) 
boxplot(ND_gse13351@assayData$exprs)

#getting expression value or probe IDs for genes
ED_gse13351<-as.data.frame(exprs(ND_gse13351))
View(ED_gse13351)

#merging ED and Phdata for allotment of probe IDs to gene IDs
colnames(ED_gse13351) = PD_gse13351$Sample_ID
#to view- colnames(ED_gse13351)
#dim(ED_gse13351)- 54675 229


#gene annotation through biomart hgnc
Martfunction=useMart("ENSEMBL_MART_ENSEMBL")
Martfunction=useDataset("hsapiens_gene_ensembl",Martfunction)
PIDs.gse13351=rownames(ED_gse13351)
PIDs_gse13351= getBM(attributes = c("affy_hg_u133_plus_2", "hgnc_symbol"),
                     filters = "affy_hg_u133_plus_2",
                     values = PIDs.gse13351,
                     mart = Martfunction)
dim(PIDs_gse13351) #[1] 48315     2

#removing unassigned probe IDs
PIDs_gse13351.df=PIDs_gse13351[!(PIDs_gse13351$hgnc_symbol==""),]
colnames(PIDs_gse13351.df)[1]<-"PIDs"
dim(PIDs_gse13351.df) #[1] 44137     2

#bringing rownames to colnames
ED_gse13351.df= rownames_to_column(ED_gse13351, "PIDs")

#merging gene symbols with ED
GS_gse13351= merge(PIDs_gse13351.df, ED_gse13351.df, by= "PIDs")
#dim(GS_gse13351)- 44137 109

#limma avereps- to avg out duplicate symbols
AR_gse13351=as.data.frame((limma::avereps(GS_gse13351, GS_gse13351$hgnc_symbol)))
#dim(AR_gse13351)- 22269 109

#final dataset - having unique gene symbols as rownames
AR_gse13351=column_to_rownames(AR_gse13351, "hgnc_symbol")
#dim(AR_gse13351)- 22269 108

#removing PIDs column
FD_gse13351=AR_gse13351[-c(1)]
#dim(FD_gse13351)- 22269 107

#converting data frame to matrix for numeric values
FD_gse13351.matrix=as.matrix(FD_gse13351)
class(FD_gse13351.matrix)= "numeric"
#dim(FD_gse13351.matrix) 22269  107

#to create common gene symbol column for merging data
MD_gse13351 <- rownames_to_column (FD_gse13351, "gene.symbol")
#dim(FD_gse26281)- 22269 108

saveRDS(MD_gse13351, file="MD_gse13351")

#DGE
f.source=factor(PD_gse13351$Mutation, levels = c("control", "case"))
design_13351 <- model.matrix(~ 0+factor(f.source))
colnames(design_13351) <-c("control", "case")
rownames(design_13351)=PD_gse13351$Sample_ID
fit_13351=lmFit(FD_gse13351.matrix, design_13351)

contrast.matrix <- makeContrasts(case-control, levels = design_13351)
fit2 <- contrasts.fit(fit_13351, contrast.matrix)
fit2 <- eBayes(fit2)

#making top table of DEGs (top 10 and all)
DGE2_gse13351<-topTable(fit2, n=Inf, adjust="BH", confint=0.95)

#saving final final for meta-analysis
saveRDS(MD_gse13351, file="1MD_gse13351")

#Dataset 13425

#set wd- session-choose directory-C:/Users/agnih/OneDrive/Desktop/dissertation/wd/GSE13425"

#cel files download and unpacking
gse13425<-list.celfiles("GSE13425/", pattern="CEL")

#reading raw data
RD_gse13425<-ReadAffy(verbose = TRUE, filenames = gse13425)

#visualization of raw data before normalization
hist(RD_gse13425)
boxplot(RD_gse13425)

#phenodata import and read
file.exists("GSE13425_pdata.txt")
PD_gse13425<-read.table("GSE13425_pdata.txt", header = TRUE, sep = "\t")

#RMA normalization
ND_gse13425 = rma(RD_gse13425)

View(ND_gse13425)  #viewing normalized data
boxplot(ND_gse13425@assayData$exprs)

#getting expression value or probe IDs for genes
ED_gse13425<-as.data.frame(exprs(ND_gse13425))

#merging ED and Phdata for allotment of probe IDs to gene IDs
colnames(ED_gse13425) = PD_gse13425$sample_IDs
dim(ED_gse13425)  #22283  190

#gene annotation through biomart hgnc
Martfunction=useMart("ENSEMBL_MART_ENSEMBL")
Martfunction=useDataset("hsapiens_gene_ensembl",Martfunction)
PIDs.gse13425=rownames(ED_gse13425)
PIDs_gse13425= getBM(attributes = c("affy_hg_u133a_2", "hgnc_symbol"),
                    filters = "affy_hg_u133a_2",
                    values = PIDs.gse13425,
                    mart = Martfunction)

dim(PIDs_gse13425) #[1] 23467     2

#removing unassigned probe IDs
PIDs_gse13425.df=PIDs_gse13425[!(PIDs_gse13425$hgnc_symbol==""),]
dim(PIDs_gse13425.df)  #[1] 22287     2

#bringing rownames to colnames
ED_gse13425.df=rownames_to_column (ED_gse13425, "PIDs")
colnames(PIDs_gse13425.df)[1]<-"PIDs"

#merging gene symbols with ED
GS_gse13425= merge(PIDs_gse13425.df, ED_gse13425.df, by= "PIDs")
dim(GS_gse13425)  #22287 192

#limma avereps- to avg out duplicate symbols
AR_gse13425=as.data.frame((limma::avereps(GS_gse13425, GS_gse13425$hgnc_symbol)))
dim(AR_gse13425)  #14118  192

#final dataset - having umique gene symbols as rownames
AR_gse13425=column_to_rownames(AR_gse13425, "hgnc_symbol")
dim(AR_gse13425)  #14118  191

#removing PIDs column
FD_gse13425=AR_gse13425[-c(1)]
dim(FD_gse13425) #14118  190

##to create common gene symbol column for merging data
MD_gse13425 <- rownames_to_column (FD_gse13425, "gene.symbol")
dim(FD_gse26281) #14118  191

#converting final data frame to matrix for numeric values
FD_gse13425.matrix=as.matrix(FD_gse13425)
class(FD_gse13425.matrix)= "numeric"

#DGE
f.source=factor(PD_gse13425$Mutations, levels = c("control", "case"))
design_13425 <- model.matrix(~ 0+factor(f.source))
colnames(design_13425) <-c("control", "case")
fit_13425=lmFit(FD_gse13425.matrix, design_13425)

contrast.matrix <- makeContrasts(case-control, levels = design_13425)
fit2 <- contrasts.fit(fit_13425, contrast.matrix)
fit2 <- eBayes(fit2)

#making top table of DEGs (top 10 and all)
DGE2_gse13425<-topTable(fit2, n=Inf, adjust="BH", confint=0.95)

#saving final final for meta-analysis
saveRDS(MD_gse13425, file="MD_gse13425"
#Dataset 26281
#set wd- session-choose directory-"C:/Users/agnih/OneDrive/Desktop/dissertation/wd/GSE26281"

#cel files download and unpacking
gse26281<-list.celfiles("GSE26281/", pattern="CEL")

#reading raw data
RD_gse26281<-ReadAffy(verbose = TRUE, filenames = gse26281)

#visualization of raw data before normalization
hist(RD_gse26281)
boxplot(RD_gse26281)

#phenodata import and read
file.exists("GSE26281_pdata.txt")
PD_gse26281<-read.table("GSE26281_pdata.txt", header = TRUE)

#RMA normalization
ND_gse26281 = rma(RD_gse26281)

View(ND_gse26281) #viewing normalized data
boxplot(ND_gse26281@assayData$exprs)

#getting expression value or probe IDs for genes
ED_gse26281<-as.data.frame(exprs(ND_gse26281))

#merging ED and Phdata for allotment of probe IDs to gene IDs
colnames(ED_gse26281) = PD_gse26281$Sample_IDs
#to view- colnames(ED_gse26281)
dim(ED_gse26281)  #22283 154

#gene annotation through biomart hgnc
Martfunction=useMart("ENSEMBL_MART_ENSEMBL")
Martfunction=useDataset("hsapiens_gene_ensembl",Martfunction)
PIDs.gse26281=rownames(ED_gse26281)
PIDs_gse26281= getBM(attributes = c("affy_hg_u133a_2", "hgnc_symbol"),
                     filters = "affy_hg_u133a_2",
                     values = PIDs.gse26281,
                     mart = Martfunction)
dim(PIDs_gse26281)  #23467     2

#removing unassigned probe IDs
PIDs_gse26281.df=PIDs_gse26281[!(PIDs_gse26281$hgnc_symbol==""),]
dim(PIDs_gse26281.df)  #22287     2

#bringing rownames to colnames
ED_gse26281.df=rownames_to_column (ED_gse26281, "PIDs")
colnames(PIDs_gse26281.df)[1]<-"PIDs"


#merging gene symbols with ED
GS_gse26281= merge(PIDs_gse26281.df, ED_gse26281.df, by= "PIDs")
#dim(GS_gse26281)- 22279 85

#limma avereps- to avg out duplicate symbols
AR_gse26281=as.data.frame((limma::avereps(GS_gse26281, GS_gse26281$hgnc_symbol)))

#final dataset - having umique gene symbols as rownames
AR_gse26281=column_to_rownames(AR_gse26281, "hgnc_symbol")
dim(AR_gse26281) #14117  84

#removing PIDs column
FD_gse26281=AR_gse26281[-c(1)]
dim(FD_gse26281) #14117  83

#creating matrix file of final dataset
FD_gse26281.matrix=as.matrix(FD_gse26281)
class(FD_gse26281.matrix)= "numeric"

#to create common gene symbol column for merging data
MD_gse26281 <- rownames_to_column (FD_gse26281, "gene.symbol")
dim(FD_gse26281) #14117  84

#DGE
f.source=factor(PD_gse26281$mutation, levels = c("control", "case"))
design_26281 <- model.matrix(~ 0+factor(f.source))
colnames(design_26281) <-c("control", "case")
fit_26281=lmFit(FD_gse26281.matrix, design_26281)

contrast.matrix <- makeContrasts(case-control, levels = design_26281)
fit2 <- contrasts.fit(fit_26281, contrast.matrix)
fit2 <- eBayes(fit2)

#making top table of DEGs (top 10 and all)
DGE2_gse26281<-topTable(fit2, n=Inf, adjust="BH", confint=0.95)

#saving final final for meta-analysis
saveRDS(MD_gse26281, file="MD_gse26281")


#Dataset 26366
#set wd- session-choose directory-"C:/Users/agnih/OneDrive/Desktop/dissertation/wd/GSE26366"

#cel files download and unpacking
gse26366<-list.celfiles("GSE26366/", pattern="CEL")

#reading raw data
RD_gse26366<-ReadAffy(verbose = TRUE, filenames = gse26366)

#visualization of raw data before normalization
hist(RD_gse26366)
boxplot(RD_gse26366)

#phenodata import and read
file.exists("GSE26366_pdata.txt")
PD_gse26366<-read.table("GSE26366_pdata.txt", header = TRUE)

#RMA normalization
ND_gse26366 = rma(RD_gse26366)

View(ND_gse26366) #viewing normalized data
boxplot(ND_gse26366@assayData$exprs)

#getting expression value or probe IDs for genes
ED_gse26366<-as.data.frame(exprs(ND_gse26366))

#merging ED and Phdata for allotment of probe IDs to gene IDs
colnames(ED_gse26366) = PD_gse26366$Sample_ID
dim(ED_gse26366)  #22283 206

#gene annotation through biomart hgnc
Martfunction=useMart("ENSEMBL_MART_ENSEMBL")
Martfunction=useDataset("hsapiens_gene_ensembl",Martfunction)
PIDs.gse26366=rownames(ED_gse26366)
PIDs_gse26366= getBM(attributes = c("affy_hg_u133a_2", "hgnc_symbol"),
                     filters = "affy_hg_u133a_2",
                     values = PIDs.gse26366,
                     mart = Martfunction)
dim(PIDs_gse26366) #[1] 23467     2

#removing unassigned probe IDs
PIDs_gse26366.df=PIDs_gse26366[!(PIDs_gse26366$hgnc_symbol==""),]
dim(PIDs_gse26366.df)  #[1] 22287     2

#bringing rownames to colnames
ED_gse26366.df=rownames_to_column (ED_gse26366, "PIDs")
colnames(PIDs_gse26366.df)[1]<-"PIDs"

#merging gene symbols with ED
GS_gse26366= merge(PIDs_gse26366.df, ED_gse26366.df, by= "PIDs")
dim(GS_gse26366)  #22287 208


#limma avereps- to avg out duplicate symbols
AR_gse26366=as.data.frame((limma::avereps(GS_gse26366, GS_gse26366$hgnc_symbol)))
dim(AR_gse26366) #14118  207

#final dataset - having umique gene symbols as rownames
AR_gse26366=column_to_rownames(AR_gse26366, "hgnc_symbol")
dim(AR_gse26366) #14118  207

#removing PIDs column
FD_gse26366=AR_gse26366[-c(1)]
dim(FD_gse26366) #14118  206

#creating matrix file of final dataset
FD_gse26366.matrix=as.matrix(FD_gse26366)
class(FD_gse26366.matrix)= "numeric"

##to create common gene symbol column for merging data
MD_gse26366 <- rownames_to_column (FD_gse26366, "gene.symbol")
dim(MD_gse26366) #14118  207

#DGE
f.source=factor(PD_gse26366$mutation, levels = c("control", "case"))
design_26366 <- model.matrix(~ 0+factor(f.source))
colnames(design_26366) <-c("control", "case")
fit_26366=lmFit(FD_gse26366.matrix, design_26366)

contrast.matrix <- makeContrasts(case-control, levels = design_26366)
fit2 <- contrasts.fit(fit_26366, contrast.matrix)
fit2 <- eBayes(fit2)

#making top table of DEGs (top 10 and all)
DGE2_gse26366<-topTable(fit2, n=Inf, adjust="BH", confint=0.95)

#saving final final for meta-analysis
saveRDS(MD_gse26366, file="1MD_gse26366")

#Dataset 79533

#set wd- session-choose directory-dekstop-wd

#cel files download and unpacking
gse79533<-list.celfiles("GSE79533/", pattern="CEL")

#reading raw data
RD_gse79533<-ReadAffy(verbose = TRUE, filenames = gse79533)

#visualization of raw data before normalization
hist(RD_gse79533)
boxplot(RD_gse79533)

#phenodata import and read
file.exists("GSE79533_pdata.txt")
PD_gse79533<-read.table("GSE79533_pdata.txt", header = TRUE, sep = "\t")

#RMA normalization
ND_gse79533 = rma(RD_gse79533)

View(ND_gse79533) #viewing normalized data
boxplot(ND_gse79533@assayData$exprs)

#getting expression value or probe IDs for genes
ED_gse79533<-as.data.frame(exprs(ND_gse79533))

#merging ED and Phdata for allotment of probe IDs to gene IDs
colnames(ED_gse79533) = PD_gse79533$Sample_IDs
dim(ED_gse79533)  #22283  83

#gene annotation through biomart hgnc
Martfunction=useMart("ENSEMBL_MART_ENSEMBL")
Martfunction=useDataset("hsapiens_gene_ensembl",Martfunction)
PIDs.gse79533=rownames(ED_gse79533)
PIDs_gse79533= getBM(attributes = c("affy_hg_u133_plus_2", "hgnc_symbol"),
                     filters = "affy_hg_u133_plus_2",
                     values = PIDs.gse79533,
                     mart = Martfunction)

dim(PIDs_gse79533) #[1] 48315     2

#removing unassigned probe IDs
PIDs_gse79533.df=PIDs_gse79533[!(PIDs_gse79533$hgnc_symbol==""),]
#dim(PIDs_gse79533.df) [1] 22279     2

#bringing rownames to colnames
ED_gse79533.df=rownames_to_column (ED_gse79533, "PIDs")
colnames(PIDs_gse79533.df)[1]<-"PIDs"

#merging gene symbols with ED
GS_gse79533= merge(PIDs_gse79533.df, ED_gse79533.df, by= "PIDs")
dim(GS_gse79533) # 44137  231

#limma avereps- to avg out duplicate symbols
AR_gse79533=as.data.frame((limma::avereps(GS_gse79533, GS_gse79533$hgnc_symbol)))
dim(AR_gse79533) # 22269  231

#final dataset - having unique gene symbols as rownames
AR_gse79533=column_to_rownames(AR_gse79533, "hgnc_symbol")
dim(AR_gse79533)  #22269  230

#removing PIDs column
FD_gse79533=AR_gse79533[-c(1)]
dim(FD_gse79533)  #22269  229

#converting data frame to matrix for numeric values
FD_gse79533.matrix=as.matrix(FD_gse79533)
class(FD_gse79533.matrix)= "numeric"
dim(FD_gse79533.matrix)  #22269  229

#to create common gene symbol column for merging data
MD_gse79533 <- rownames_to_column (FD_gse79533, "gene.symbol")
dim(FD_gse26281)  #22269  230

#DGE
f.source=factor(PD_gse79533$mutation, levels = c("control", "case"))
design_79533 <- model.matrix(~ 0+factor(f.source))
colnames(design_79533) <-c("control", "case")
fit_79533=lmFit(FD_gse79533.matrix, design_79533)

contrast.matrix <- makeContrasts(case-control, levels = design_79533)
fit2 <- contrasts.fit(fit_79533, contrast.matrix)
fit2 <- eBayes(fit2)

#making top table of DEGs (top 10 and all)
DGE2_gse79533<-topTable(fit2, n=Inf, adjust="BH", confint=0.95)

#saving files
saveRDS(MD_gse79533, file="MD_gse79533")
